package com.epion_t3.dev.tools.messages.generator.component;

import com.epion_t3.dev.tools.messages.generator.bean.DevGeneratorContext;
import com.epion_t3.dev.tools.messages.generator.bean.FunctionModel;
import com.epion_t3.dev.tools.messages.generator.bean.Property;
import com.epion_t3.dev.tools.messages.generator.exception.GeneratorException;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Map;
import java.util.Properties;

/**
 * message.propertiesの出力コンポーネント.
 *
 * @author takashno
 */
public final class MessagePropertyGenerateComponent implements Component {

    /**
     * シングルトンインスタンス.
     */
    private static MessagePropertyGenerateComponent instance = new MessagePropertyGenerateComponent();

    /**
     * プライベートコンストラクタ.
     */
    private MessagePropertyGenerateComponent() {
        // Do Nothing...
    }

    /**
     * シングルトンインスタンスの取得.
     *
     * @return シングルトンインスタンス
     */
    public static MessagePropertyGenerateComponent getInstance() {
        return instance;
    }

    /**
     * messages.propertiesの出力.
     *
     * @param context コンテキスト
     */
    public void execute(DevGeneratorContext context) {

        for (Map.Entry<String, FunctionModel> entry : context.getFunctionModelMap().entrySet()) {

            // プロパティ作成
            Properties prop = new Properties();
            for (Property property : entry.getValue().getMessages().values()) {
                prop.put(property.getKey(), property.getValue());
            }
            try (FileOutputStream fos = new FileOutputStream(
                    new File(context.getExecuteOptions().getMessageOutput(),
                            context.getSpec().getInfo().getName() + "_messages_" + entry.getKey() + ".properties"));) {
                prop.store(fos, " Generated by epion-t3-message-generator");
            } catch (IOException e) {
                throw new GeneratorException("fail output messages.properties.", e);
            }


            // Enum作成
//            Java8Converter converter = new Java8Converter();
//            ConvertContext convertContext = new ConvertContext();
//            ConvertTarget convertTarget = new ConvertTarget();
//            convertContext.getTargets().add(convertTarget);
//
//
//            ClassModel clazz = new ClassModel();
//
//
//            convertTarget.setClazz(clazz);
//            convertTarget.setTemplatePath(DefaultTemplate.JAVA8.getPath());
//            StringWriter sw = new StringWriter();
//            convertTarget.setOutputWriter(sw);
//            convertContext.getTargets().add(convertTarget);
//
//            converter.convert(convertContext);


        }

    }

}
