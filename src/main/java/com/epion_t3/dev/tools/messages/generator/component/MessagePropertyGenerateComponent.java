package com.epion_t3.dev.tools.messages.generator.component;

import com.epion_t3.core.common.bean.spec.Content;
import com.epion_t3.core.common.bean.spec.ET3Spec;
import com.epion_t3.core.common.bean.spec.Message;
import com.epion_t3.dev.tools.messages.generator.bean.ExecuteOptions;
import com.epion_t3.dev.tools.messages.generator.bean.Property;
import com.epion_t3.dev.tools.messages.generator.exception.GeneratorException;
import com.zomu.t.lib.java.generate.common.context.ConvertContext;
import com.zomu.t.lib.java.generate.common.context.ConvertTarget;
import com.zomu.t.lib.java.generate.common.type.DefaultTemplate;
import com.zomu.t.lib.java.generate.java8.converter.Java8Converter;
import com.zomu.t.lib.java.generate.java8.model.ClassModel;

import java.io.*;
import java.util.*;

public class MessagePropertyGenerateComponent {

    private static MessagePropertyGenerateComponent instance = new MessagePropertyGenerateComponent();

    private MessagePropertyGenerateComponent() {
        // Do Nothing...
    }

    public static MessagePropertyGenerateComponent getInstance() {
        return instance;
    }

    public void generate(ET3Spec et3Spec, ExecuteOptions options) {

        Map<String, List<Property>> messageMap = new HashMap<>();
        for (Message message : et3Spec.getMessages()) {
            for (Content content : message.getMessage()) {
                if (messageMap.containsKey(content.getLang())) {
                    messageMap.get(content.getLang()).add(Property.builder().key(message.getId())
                            .value(content.getContents()).build());
                } else {
                    messageMap.put(content.getLang(), new ArrayList<>());
                }
            }
        }

        for (Map.Entry<String, List<Property>> entry : messageMap.entrySet()) {

            // プロパティ作成
            Properties prop = new Properties();
            for (Property property : entry.getValue()) {
                prop.put(property.getKey(), property.getValue());
            }
            try (FileOutputStream fos = new FileOutputStream(
                    new File(options.getMessageOutput(),
                            et3Spec.getInfo().getName() + "_messages_" + entry.getKey() + ".properties"));) {
                prop.store(fos, "Generated by epion-t3-message-generator");
            } catch (IOException e) {
                throw new GeneratorException("fail output messages.properties.", e);
            }


            // Enum作成
//            Java8Converter converter = new Java8Converter();
//            ConvertContext convertContext = new ConvertContext();
//            ConvertTarget convertTarget = new ConvertTarget();
//            convertContext.getTargets().add(convertTarget);
//
//
//            ClassModel clazz = new ClassModel();
//
//
//            convertTarget.setClazz(clazz);
//            convertTarget.setTemplatePath(DefaultTemplate.JAVA8.getPath());
//            StringWriter sw = new StringWriter();
//            convertTarget.setOutputWriter(sw);
//            convertContext.getTargets().add(convertTarget);
//
//            converter.convert(convertContext);


        }

    }

}
